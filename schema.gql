# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input BooleanFilterInput {
  equal: String
  not_equal: String
  order: Order
}

input CreateEntityInput {
  name: String!
  project: UpdateProjectInput!
}

input CreateProjectInput {
  name: String!
  color: String!
  url: String!
}

input DeleteEntityInput {
  id: Int!
}

input DeleteProjectInput {
  id: Int!
}

type EntityDTO {
  id: Int!
  name: String!
  project: ProjectDTO
}

input EntityFilterInput {
  id: IdFilterInput
  name: StringFilterInput
  project: ProjectFilterInput
}

type EntityPaginationDTO {
  items: [EntityDTO!]!
  totalItems: Int!
  take: Int!
  page: Int!
}

input EntityPaginationInput {
  filter: EntityFilterInput = {}
  page: Int = 0
  take: Int = 20
}

input IdFilterInput {
  equal: Int
  not_equal: Int
  in: [Int!]
  not_in: [Int!]
  order: Order
}

type Mutation {
  createProject(input: CreateProjectInput!): ProjectDTO!
  updateProject(input: UpdateProjectInput!): ProjectDTO!
  deleteProject(input: DeleteProjectInput!): Int!
  createEntity(input: CreateEntityInput!): EntityDTO!
  updateEntity(input: UpdateEntityInput!): EntityDTO!
  deleteEntity(input: DeleteEntityInput!): Int!
  deleteEntities(input: [DeleteEntityInput!] = []): [Int!]!
}

input NumberFilterInput {
  equal: Float
  not_equal: Float
  in: [Float!]
  not_in: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  order: Order
}

enum Order {
  ASC
  DESC
}

type ProjectDTO {
  id: Int!
  name: String!
  color: String!
  url: String!
  entities: [EntityDTO!]
}

input ProjectFilterInput {
  id: IdFilterInput
  name: StringFilterInput
  color: StringFilterInput
  url: StringFilterInput
}

type ProjectPaginationDTO {
  items: [ProjectDTO!]!
  totalItems: Int!
  take: Int!
  page: Int!
}

input ProjectPaginationInput {
  filter: ProjectFilterInput = {}
  page: Int = 0
  take: Int = 20
}

type Query {
  project(id: Int!): ProjectDTO
  projects(input: ProjectPaginationInput = {}): ProjectPaginationDTO!
  entity(id: Int!): EntityDTO
  entities(input: EntityPaginationInput = {}): EntityPaginationDTO!
}

input StringFilterInput {
  equal: String
  not_equal: String
  in: [String!]
  not_in: [String!]
  contains: String
  not_contains: String
  order: Order
}

input UpdateEntityInput {
  id: Int!
  name: String
  project: UpdateProjectInput
}

input UpdateProjectInput {
  id: Int!
  name: String
  color: String
  url: String
}
